//----------------------------------------------------------------
//  Placeholders
//----------------------------------------------------------------
.clearfix,
%clearfix {
    
    &:after {
        content: "";
        width: 100%;
        height: 0;
        display: block;
        clear: both;
    }
}

.circle,
%circle {
    @include pre(background-clip, padding-box);
    @include pre(border-radius, 50%);
    overflow: hidden;
    display: inline;
}

.has-shadow,
%has-shadow {
    box-shadow: 0 2px 3px #ccc;
    box-shadow: 0 0.2rem 0.3rem #ccc;
}

.box-shadow,
%box-shadow {
    -webkit-box-shadow: 0px 2px 3px rgba(138,133,127,0.3);
       -moz-box-shadow: 0px 2px 3px rgba(138,133,127,0.3);
            box-shadow: 0px 2px 3px rgba(138,133,127,0.3);
}

.aa,
%aa {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}


//----------------------------------------------------------------
//  General Elements
//----------------------------------------------------------------
a {
    outline: none;
}

iframe, 
object, 
embed {
    max-width: 100%;
}

body {

    &.blog-first,
    &.blog-second {
        overflow: visible;
    }

    &.get-in-touch-active {
        overflow: visible;
    }
}

//----------------------------------------------------------------
//  Helper Classes
//----------------------------------------------------------------
.fl {
    float: left;
}

.fr {
    float: right;
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.has-radius {
    @include radius(3);
}

.no-wrap {
    white-space: nowrap;
}

.overflow-hidden {
    overflow: hidden;
}

.hidden {
    display: none;
}

.v-wrapper {
    display: table;
    height: 100%;
    width: 100%;

    .v-inner {
        display: table-cell;
        height: 100%;
        vertical-align: middle;
    }
}


//----------------------------------------------------------------
//  Hero
//----------------------------------------------------------------
.hero {

}

//----------------------------------------------------------------
//  Navigation
//----------------------------------------------------------------

.prev-next-nav {

    .icon-arrow-left,
    .icon-arrow-right {
        @extend .circle;
        background: rgba(0, 0, 0, 0.3);
        height: 36px;
        width: 36px;
        border-radius: 50%;
        border: 3px solid $white;
        position: absolute;
        top: 50%;
        margin-top: -18px;

        &:before {
            position: absolute;
            color: #fff;
            font-size: 10px;
            font-weight: 600;
            width: 36px;
            height: 36px;
            line-height: 37px;
            text-align: center;
            opacity: 1;
            left: 50%;
            top: 50%;
            margin: -18px 0 0 -18px;
            text-indent: 2px;
        }
    }

    .nav-prev,
    .nav-next {

        .zeta {
            opacity: 0;
            position: absolute;
            top: 50%;
            margin-top: -10px;
            @include trans(opacity 0.3s ease-out 0s);
        }

        &:hover {
            .icon-arrow-left,
            .icon-arrow-right {
                margin-top: -53px;
                height: 106px;
                width: 106px;
                border: 3px solid transparent;

                &:before {
                    opacity: 0;
                }
            }

            .zeta {
                @include trans(opacity 0.3s ease-out 0.5s);
                opacity: 0.7;
            }
        }
    }
}


//----------------------------------------------------------------
//  Ember
//----------------------------------------------------------------
.liquid-container {
    position: absolute;
    @include pre(width, 100%);
    @include pre(top, 0);
    @include pre(left, 0);
    @include trans(transform 0.6s ease-out, top 0.6s ease-out);
    background: $white;
    margin-top: 40px;

    &.minimize {
        overflow: hidden;
        @include pre(top, 100%);
        transform: scale(0);
        z-index: 1;
        box-shadow: 10px 14px 50px 0px rgba(0,0,0,0.4);

        @media only screen and (min-width: $mediumScreen + px) {
            transform: scale(0.7);
            @include pre(top, 60%);
        }
    }

    @media only screen and (min-width: $smallScreen + px) {
        margin-top: 0;
    }
}


//----------------------------------------------------------------
//  Backgrounds & Containers
//----------------------------------------------------------------
.bg-white {
    background-color: $white;
}

.bg-black {
    background-color: $black;
}

.bg-red {
    background-color: $red;
}

.bg-tealLight {
    background-color: $tealLight;
}

.bg-green {
    background-color: $green;
}

.bg-forestDark {
    background-color: $forestDark;
}

.bg-blueGreyLight {
    background-color: $blueGreyLight;
}


//----------------------------------------------------------------
//  Borders
//----------------------------------------------------------------
// Can be written as classes, like .border-white, .left-border-white,
// .thick-border-white and so on. Add more border colours below.
[class*="border-"] {
    @include border(1, solid, transparent);
}

[class*="top-border"] {
    @include border(1, solid, transparent, top);
    border-bottom: 0;
    border-left: 0;
    border-right: 0;
}

[class*="bottom-border"] {
    @include border(1, solid, transparent, bottom);
    border-top: 0;
    border-left: 0;
    border-right: 0;
}

[class*="left-border"] {
    @include border(1, solid, transparent, left);
    border-top: 0;
    border-bottom: 0;
    border-right: 0;
}

[class*="right-border"] {
    @include border(1, solid, transparent, right);
    border-top: 0;
    border-bottom: 0;
    border-left: 0;
}

[class*="thick-"] {
    @include prop(border-width, 2);
}

[class*="xthick-"] {
    @include prop(border-width, 4);
}

@include borderColor("red", $red);
@include borderColor("tealLight", $tealLight);
@include borderColor("green", $green);
@include borderColor("forestDark", $forestDark);


.br-greenLightest {
    position: relative;
    
    &:before {
        content: "";
        display: block;
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 1px;
        background: $greenLightest;

        @media only screen and (min-width: $mediumScreen + px) {
            width: 80%;
        }

        @media only screen and (min-width: $largeScreen + px) {
            width: 80%;
        }
    }
}